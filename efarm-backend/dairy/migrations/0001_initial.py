# Generated by Django 4.2.2 on 2023-06-13 17:03

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Barn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('capacity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
            ],
            options={
                'verbose_name': 'Barn',
                'verbose_name_plural': 'Barns',
            },
        ),
        migrations.CreateModel(
            name='Cow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('breed', models.CharField(choices=[('Friesian', 'Friesian'), ('Ayrshire', 'Ayrshire'), ('Sahiwal', 'Sahiwal'), ('Jersey', 'Jersey'), ('Crossbreed', 'Crossbreed'), ('Guernsey', 'Guernsey')], max_length=32)),
                ('date_of_birth', models.DateField(error_messages={'max_value': 'The date of birth cannot be in the future!.'}, validators=[django.core.validators.MaxValueValidator(datetime.date(2023, 6, 13))])),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=6)),
                ('availability_status', models.CharField(choices=[('Alive', 'Alive'), ('Sold', 'Sold'), ('Dead', 'Dead')], default='Alive', max_length=5)),
                ('pregnancy_status', models.CharField(choices=[('Open', 'Open'), ('Pregnant', 'Pregnant'), ('Calved', 'Calved')], default='Not Pregnant', max_length=12)),
                ('date_of_death', models.DateField(blank=True, error_messages={'max_value': 'The date of death cannot be in the future!.'}, null=True, validators=[django.core.validators.MaxValueValidator(datetime.date(2023, 6, 13))])),
                ('calf', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dams', to='dairy.cow')),
                ('dam', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='calves', to='dairy.cow')),
                ('sire', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='offspring', to='dairy.cow')),
            ],
            options={
                'verbose_name': 'Cow üêÑ',
                'verbose_name_plural': 'Cows üêÑ',
            },
        ),
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('occurrence_date', models.DateField()),
                ('is_recovered', models.BooleanField(default=False)),
                ('recovered_date', models.DateField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Disease üíä',
                'verbose_name_plural': 'Diseases üíä',
            },
        ),
        migrations.CreateModel(
            name='DiseaseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Nutrition', 'Nutrition'), ('Infectious', 'Infectious'), ('Physiological', 'Physiological'), ('Genetic', 'Genetic')], max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Disease category',
                'verbose_name_plural': 'Disease categories',
            },
        ),
        migrations.CreateModel(
            name='Inseminator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('company', models.CharField(blank=True, max_length=64, null=True)),
                ('license_number', models.CharField(max_length=32, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(max_length=254)),
                ('address', models.CharField(blank=True, max_length=256, null=True)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'AI Technician üéØ',
                'verbose_name_plural': 'AI Technicians üéØ',
            },
        ),
        migrations.CreateModel(
            name='Lactation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(editable=False, null=True)),
                ('lactation_number', models.PositiveSmallIntegerField(default=1, editable=False)),
                ('cow', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, to='dairy.cow')),
            ],
            options={
                'verbose_name': 'Lactation üçº',
                'verbose_name_plural': 'Lactations üçº',
                'get_latest_by': 'start_date',
            },
        ),
        migrations.CreateModel(
            name='Pathogen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Virus', 'Virus'), ('Bacteria', 'Bacteria'), ('Fungi', 'Fungi')], max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Pathogen',
                'verbose_name_plural': 'Pathogens',
            },
        ),
        migrations.CreateModel(
            name='Symptoms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('Respiratory', 'Respiratory'), ('Digestive', 'Digestive'), ('Reproductive', 'Reproductive'), ('Musculoskeletal', 'Musculoskeletal'), ('Metabolic', 'Metabolic'), ('Other', 'Other')], max_length=20)),
                ('description', models.TextField()),
                ('date_observed', models.DateField(error_messages={'max_value': 'The date of observation cannot be in the future!.'}, validators=[django.core.validators.MaxValueValidator(datetime.date(2023, 6, 13))])),
                ('severity', models.CharField(choices=[('Mild', 'Mild'), ('Moderate', 'Moderate'), ('Severe', 'Severe')], max_length=20)),
                ('location', models.CharField(choices=[('head', 'Head'), ('Neck', 'Neck'), ('Chest', 'Chest'), ('Abdomen', 'Abdomen'), ('Back', 'Back'), ('Legs', 'Legs'), ('Tail', 'Tail'), ('Whole body', 'Whole body'), ('Other', 'Other')], max_length=20)),
            ],
            options={
                'verbose_name': 'Symptom ü§í',
                'verbose_name_plural': 'Symptoms ü§í',
            },
        ),
        migrations.CreateModel(
            name='Treatment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_treatment', models.DateTimeField(auto_now_add=True)),
                ('duration', models.IntegerField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('treatment_method', models.TextField(max_length=200)),
                ('treatment_status', models.CharField(choices=[('Scheduled', 'Scheduled'), ('In progress', 'In Progress'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled'), ('Postponed', 'Postponed')], default='Scheduled', max_length=15)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cow', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dairy.cow')),
                ('disease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dairy.disease')),
            ],
            options={
                'verbose_name': 'Treatment üíé',
                'verbose_name_plural': 'Treatments üíé',
            },
        ),
        migrations.CreateModel(
            name='Semen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('producer', models.CharField(choices=[('KALRO', 'Kenya Agricultural and Livestock Research Organization'), ('KAGRIC', 'Kenya Agricultural and Livestock Research Institute')], max_length=64)),
                ('semen_batch', models.CharField(max_length=64)),
                ('date_of_production', models.DateField(error_messages={'max_value': 'Invalid date entry, Dates of production must not be in future'}, validators=[django.core.validators.MaxValueValidator(datetime.date(2023, 6, 13))])),
                ('date_of_expiry', models.DateField(error_messages={'min_value': 'Invalid date entry, Date of expiry must be in future'}, validators=[django.core.validators.MinValueValidator(datetime.date(2023, 6, 13))])),
                ('notes', models.TextField(blank=True)),
                ('inseminator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dairy.inseminator')),
            ],
            options={
                'verbose_name': 'Semen üí•',
                'verbose_name_plural': 'Semen üí•',
            },
        ),
        migrations.CreateModel(
            name='Pregnancy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('date_of_calving', models.DateField(blank=True, null=True)),
                ('pregnancy_status', models.CharField(choices=[('Confirmed', 'Confirmed'), ('Unconfirmed', 'Unconfirmed'), ('Failed', 'Failed')], default='Unconfirmed', max_length=11)),
                ('pregnancy_notes', models.TextField(blank=True)),
                ('calving_notes', models.TextField(blank=True)),
                ('pregnancy_scan_date', models.DateField(blank=True, null=True)),
                ('pregnancy_failed_date', models.DateField(blank=True, error_messages={'max_value': 'Future records not allowed!.'}, null=True, validators=[django.core.validators.MaxValueValidator(datetime.date(2023, 6, 13))])),
                ('pregnancy_outcome', models.CharField(blank=True, choices=[('Live', 'Live'), ('Stillborn', 'Stillborn'), ('Miscarriage', 'Miscarriage')], max_length=11, null=True)),
                ('cow', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pregnancies', to='dairy.cow')),
            ],
            options={
                'verbose_name': 'Pregnancies ü§∞',
                'verbose_name_plural': 'Pregnancies ü§∞',
            },
        ),
        migrations.CreateModel(
            name='Milk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('milking_date', models.DateTimeField(auto_now_add=True)),
                ('amount_in_kgs', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, validators=[django.core.validators.MinValueValidator(0, message='Amount of milk can not be less than 0 Kgs.'), django.core.validators.MaxValueValidator(35, message='Amount of milk cannot exceed 35 Kgs.')], verbose_name='Amount (kg)')),
                ('cow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='milk', to='dairy.cow')),
                ('lactation', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='dairy.lactation')),
            ],
            options={
                'verbose_name': 'Milk ü•õ',
                'verbose_name_plural': 'Milk ü•õ',
            },
        ),
        migrations.AddField(
            model_name='lactation',
            name='pregnancy',
            field=models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='dairy.pregnancy'),
        ),
        migrations.CreateModel(
            name='Insemination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_insemination', models.DateField(error_messages={'max_value': 'Invalid date entry, Dates must not be in future'}, validators=[django.core.validators.MaxValueValidator(datetime.date(2023, 6, 13))])),
                ('success', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('cow', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dairy.cow')),
                ('inseminator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dairy.inseminator')),
                ('pregnancy', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='dairy.pregnancy')),
                ('semen', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='dairy.semen')),
            ],
            options={
                'verbose_name': 'AI Record üìÜ',
                'verbose_name_plural': 'AI Records üìÜ',
                'ordering': ['-date_of_insemination'],
            },
        ),
        migrations.CreateModel(
            name='Heat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observation_time', models.DateTimeField()),
                ('cow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dairy.cow')),
            ],
            options={
                'verbose_name': 'Heat üî•',
                'verbose_name_plural': 'Heat üî•',
            },
        ),
        migrations.AddField(
            model_name='disease',
            name='categories',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='diseases', to='dairy.diseasecategory'),
        ),
        migrations.AddField(
            model_name='disease',
            name='cows',
            field=models.ManyToManyField(related_name='diseases', to='dairy.cow'),
        ),
        migrations.AddField(
            model_name='disease',
            name='pathogen',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dairy.pathogen'),
        ),
        migrations.AddField(
            model_name='disease',
            name='symptoms',
            field=models.ManyToManyField(related_name='diseases', to='dairy.symptoms'),
        ),
        migrations.AddField(
            model_name='disease',
            name='treatments',
            field=models.ManyToManyField(blank=True, related_name='diseases', to='dairy.treatment'),
        ),
        migrations.CreateModel(
            name='Culling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('disease', 'Disease'), ('illness', 'Illness'), ('injuries', 'Injuries'), ('chronic_health', 'Chronic Health Issues'), ('cost_of_care', 'Cost of Care'), ('unprofitable', 'Unprofitable'), ('low_market_demand', 'Low Market Demand'), ('low_production', 'Low Production'), ('poor_quality', 'Poor Quality'), ('inefficient_feed', 'Inefficient Feed Conversion'), ('inherited_diseases', 'Inherited Diseases'), ('inbreeding', 'Inbreeding'), ('unwanted_traits', 'Unwanted Traits'), ('climate_change', 'Climate Change'), ('natural_disasters', 'Natural Disasters'), ('overpopulation', 'Overpopulation'), ('government_regulations', 'Government Regulations'), ('animal_welfare', 'Animal Welfare Standards'), ('environmental_protection', 'Environmental Protection Laws')], max_length=100)),
                ('date', models.DateField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('cow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cullings', to='dairy.cow')),
            ],
            options={
                'verbose_name': 'Culling üó°',
                'verbose_name_plural': 'Cullings üó°',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='CowPen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Movable', 'Movable'), ('Fixed', 'Fixed')], max_length=15)),
                ('category', models.CharField(choices=[('Calf Pen', 'Calf Pen'), ('Sick Pen', 'Sick Pen'), ('Breeding Pen', 'Breeding Pen'), ('Quarantine Pen', 'Quarantine Pen'), ('Bull Pen', 'Bull Pen'), ('Heifer Pen', 'Heifer Pen'), ('Dry Pen', 'Dry Pen'), ('General Pen', 'General Pen')], max_length=15)),
                ('capacity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('barn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pens', to='dairy.barn')),
            ],
        ),
        migrations.CreateModel(
            name='CowInPenMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('cow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dairy.cow')),
                ('new_pen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cows_new_pen', to='dairy.cowpen')),
                ('previous_pen', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cows_previous_pen', to='dairy.cowpen')),
            ],
        ),
        migrations.CreateModel(
            name='CowInBarnMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('cow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dairy.cow')),
                ('new_barn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_cows', to='dairy.barn')),
                ('previous_barn', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='moved_cows', to='dairy.barn')),
            ],
        ),
        migrations.CreateModel(
            name='WeightRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('weight', models.DecimalField(decimal_places=2, default=1, max_digits=6, validators=[django.core.validators.MinValueValidator(1, message="Invalid weight. A cow's minimum weight record can not be less than 1 Kgs."), django.core.validators.MaxValueValidator(1500, message="Invalid weight. A cow's maximum weight can not exceed 1500 Kgs.")])),
                ('cow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dairy.cow')),
            ],
            options={
                'verbose_name': 'Weight ‚öñ',
                'verbose_name_plural': 'Weight ‚öñ',
                'unique_together': {('cow', 'date')},
            },
        ),
        migrations.CreateModel(
            name='Vaccination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vaccine_name', models.CharField(max_length=100)),
                ('date_given', models.DateField(auto_now_add=True)),
                ('dose_amount', models.DecimalField(decimal_places=2, max_digits=7, validators=[django.core.validators.MinValueValidator(0)])),
                ('dose_unit', models.CharField(choices=[('ml', 'ml'), ('cc', 'cc'), ('mg', 'mg'), ('g', 'g')], default='ml', max_length=3)),
                ('cow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dairy.cow')),
            ],
            options={
                'ordering': ['-date_given'],
                'unique_together': {('cow', 'vaccine_name')},
            },
        ),
        migrations.AddConstraint(
            model_name='milk',
            constraint=models.UniqueConstraint(fields=('cow', 'milking_date'), name='unique_milk_record'),
        ),
        migrations.AlterUniqueTogether(
            name='insemination',
            unique_together={('cow', 'date_of_insemination')},
        ),
    ]
